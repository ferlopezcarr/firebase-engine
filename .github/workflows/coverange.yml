name: Deploy Cloud Functions to production
on:
  push:
    branches:
      - master
jobs:
  linting:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    env:
      NODE_VERSION: 10
    steps:
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install linter
        run: sudo npm install tslint -g
      - name: Run linter
        run: npm run lint
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install builder
        run: sudo npm install typescript -g
      - name: Run builder
        run: npm run build
  tests:
    uns-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install emulator and test library
        run: sudo npm install firebase-tools nyc mocha -g
      - name: Run emulator
        run: npm run cov