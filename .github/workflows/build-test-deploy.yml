name: Build, test and deploy
on:
  push:
    tags:
      - 'v1.*.*'
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      NODE_VERSION: 10
    steps:
      - name: 小heckout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install builder
        run: sudo npm install typescript tslint -g
      - name: Run linter
        run: npm run lint
      - name: Run builder
        run: npm run build
      - name: Archiving lib directory
        uses: actions/upload-artifact@v2
        with:
          name: lib
          path: ${{ github.workspace }}/lib
  node10:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    env:
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      NODE_VERSION: 10
    steps:
      - name: 小heckout repo
        uses: actions/checkout@v2
      - name: Unarchiving lib directory
        uses: actions/download-artifact@v2
        with:
          name: lib
          path: ${{ github.workspace }}/lib
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install emulator and test library
        run: sudo npm install firebase-tools nyc mocha -g
      - name: Set service account
        run: echo $SERVICE_ACCOUNT>serviceAccount.json
      - name: Run emulator
        run: npm run cov
  node12:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build, node10]
    env:
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      NODE_VERSION: 12
    steps:
      - name: 小heckout repo
        uses: actions/checkout@v2
      - name: Unarchiving lib directory
        uses: actions/download-artifact@v2
        with:
          name: lib
          path: ${{ github.workspace }}/lib
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Install emulator and test library
        run: sudo npm install firebase-tools nyc mocha -g
      - name: Set service account
        run: echo $SERVICE_ACCOUNT>serviceAccount.json
      - name: Run emulator
        run: npm run cov
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build, node10, node12]
    env:
      NODE_VERSION: 10
    steps:
      - name: 小heckout repo
        uses: actions/checkout@v2
      - name: Unarchiving lib directory
        uses: actions/download-artifact@v2
        with:
          name: lib
          path: ${{ github.workspace }}/lib
       - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install modules
        run: npm ci
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            see [CHANGELOG.md](https://github.com/siarheidudko/firebase-engine/blob/master/CHANGELOG.md)
          draft: false
          prerelease: false
      - name: Set registry npm packages
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://registry.npmjs.org'
      - name: Publish package to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set registry github packages
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://npm.pkg.github.com'
      - name: Publish package to GITHUB
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}